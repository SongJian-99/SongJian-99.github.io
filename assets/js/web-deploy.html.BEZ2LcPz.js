import{_ as i}from"./plugin-vue_export-helper.DlAUqK2U.js";import{c as a,a as n,o as l}from"./app.D_qosN0g.js";const e={};function t(h,s){return l(),a("div",null,s[0]||(s[0]=[n(`<blockquote><p>本文主要介绍使用 Dockerfile + Docker Compose 部署完整 Web 项目（包括数据库、后端和前端）的详细步骤。</p><p>项目是前后端分离的，后端使用 SpringBoot2.7.5 + JDK17 + MySQL 8；前端使用 Vue + webpack。服务器是跑在 WSL2 上的 Ubuntu 20.04.5</p></blockquote><h2 id="服务器目录结构" tabindex="-1"><a class="header-anchor" href="#服务器目录结构"><span>服务器目录结构</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>—— root</span></span>
<span class="line"><span>  |—— mall  // 根目录</span></span>
<span class="line"><span>      |—— pack</span></span>
<span class="line"><span>          |—— back // 后端</span></span>
<span class="line"><span>              |-- Dockerfile // 构建镜像的文本文件</span></span>
<span class="line"><span>              |-- core-0.0.1-SNAPSHOT.jar</span></span>
<span class="line"><span>              |-- deploy.sh     // 用来将 jar 包复制到服务器上的脚本文件</span></span>
<span class="line"><span>              |-- docker-compose.yaml       // 启动容器</span></span>
<span class="line"><span>          |—— web // 前端</span></span>
<span class="line"><span>              |-- Dockerfile</span></span>
<span class="line"><span>              |-- dist</span></span>
<span class="line"><span>              |-- deploy.sh     // 用来将 dist 文件夹复制到服务器上的脚本文件</span></span>
<span class="line"><span>              |-- docker-compose.yaml       // 启动容器</span></span>
<span class="line"><span>              |-- nginx.conf    // nginx 配置文件</span></span>
<span class="line"><span>          |—— jdk // jdk 环境</span></span>
<span class="line"><span>              |-- Dockerfile    // 用来构建 JDK 镜像</span></span>
<span class="line"><span>              |-- jdk-17.0.5_linux-x64_bin.tar.gz   // JDK</span></span>
<span class="line"><span>              |-- jdk-17.0.5    // jdk-17.0.5_linux-x64_bin.tar.gz 解压后的文件夹</span></span>
<span class="line"><span>      |—— mysql // 数据库(以下三个目录，启动 MySQL 容器时自动创建)</span></span>
<span class="line"><span>          |-- conf</span></span>
<span class="line"><span>          |-- data</span></span>
<span class="line"><span>          |-- logs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库"><span>数据库</span></a></h2><h3 id="拉取-mysql-镜像" tabindex="-1"><a class="header-anchor" href="#拉取-mysql-镜像"><span>拉取 MySQL 镜像</span></a></h3><p><strong>注意：</strong>  MySQL 版本需与项目中使用的版本相对应</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mysql:8.0.28</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="启动-mysql-容器" tabindex="-1"><a class="header-anchor" href="#启动-mysql-容器"><span>启动 MySQL 容器</span></a></h3><p>切换到 <strong>mysql</strong> 目录下，执行以下命令，启动容器。执行成功后会在当前目录下创建 <strong>conf</strong>、<strong>data</strong>、<strong>logs</strong> 三个文件夹</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3306:3306</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mysql</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--restart=always </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--privileged=true </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PWD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/conf/:/etc/mysql/conf.d</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PWD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/logs:/logs</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PWD</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/data:/var/lib/mysql</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-e </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">TZ=Asia/Shanghai</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-e </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">MYSQL_ROOT_PASSWORD=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">123456</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-d </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mysql:8.0.28</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要对 MySQL 进行详细配置，可以在 <strong>conf</strong> 目录下添加 my.cnf 配置文件，然后重新启动容器（命令如下）</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">容器id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>my.cnf 配置文件</p><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" data-title="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[client]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 3306</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Mysql服务的唯一编号 每个mysql服务Id需唯一</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">server-id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 服务端口号 默认3306</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 3306</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># mysql安装根目录</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">basedir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> /usr/local/mysql</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># mysql数据文件所在位置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">datadir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> /usr/local/mysql/data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">secure-file-priv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> /var/lib/mysql</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 允许访问的IP网段</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">bind-address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 只能用IP地址检查客户端的登录，不用主机名</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">skip_name_resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 数据库默认字符集,主流字符集支持一些特殊表情符号（特殊表情符占用4个字节）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">character-set-server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> utf8mb4</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 数据库字符集对应一些排序等规则，注意要和character-set-server对应</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">collation-server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> utf8mb4_general_ci</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置client连接mysql时的字符集,防止乱码</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">init_connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;SET NAMES utf8mb4&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 是否对sql语句大小写敏感，1表示不敏感</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">lower_case_table_names</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 最大连接数</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">max_connections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 400</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 最大错误连接数</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">max_connect_errors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 1000</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># TIMESTAMP如果没有显示声明NOT NULL，允许NULL值</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">explicit_defaults_for_timestamp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># SQL数据包发送的大小，如果有BLOB对象建议修改成1G</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">max_allowed_packet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 128M</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MySQL连接闲置超过一定时间后(单位：秒)将会被强行关闭</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MySQL默认的wait_timeout  值为8个小时, interactive_timeout参数需要同时配置才能生效</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">interactive_timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 1800</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">wait_timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 1800</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 内部内存临时表的最大值，设置成128M。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 比如大数据量的group by,order by时可能用到临时表，</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 超过了这个值将写入磁盘，系统IO压力增大</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">tmp_table_size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 134217728</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">max_heap_table_size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 134217728</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 慢查询sql日志设置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">slow_query_log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">slow_query_log_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> slow.log</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查未使用到索引的sql</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">log_queries_not_using_indexes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 针对log_queries_not_using_indexes开启后，记录慢sql的频次、每分钟记录的条数</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">log_throttle_queries_not_using_indexes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 5</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 慢查询执行的秒数，必须达到此值可被记录</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">long_query_time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检索的行数必须达到此值才可被记为慢查询</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">min_examined_row_limit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 100</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># mysql binlog日志文件保存的过期时间，过期后自动删除</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">binlog_expire_logs_seconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 604800</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，数据库部署完成。之后可以使用 Navicat 连接数据库将本地数据库中的数据同步过来。</p><h2 id="制作-jdk17-镜像" tabindex="-1"><a class="header-anchor" href="#制作-jdk17-镜像"><span>制作 JDK17 镜像</span></a></h2><h3 id="下载-jdk" tabindex="-1"><a class="header-anchor" href="#下载-jdk"><span>下载 JDK</span></a></h3><p>项目使用的 JDK 版本为 17.0.5。<a href="https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html" target="_blank" rel="noopener noreferrer">下载</a>对应的版本，上传到 <strong>jdk</strong> 目录下，并解压。 <img src="https://s2.loli.net/2023/02/03/tAVzlEXg9DHF71u.png" alt="image-20230128185346114.png" loading="lazy"></p><h3 id="编写-dockerfile-文件" tabindex="-1"><a class="header-anchor" href="#编写-dockerfile-文件"><span>编写 Dockerfile 文件</span></a></h3><div class="language-dockerfile line-numbers-mode" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 基础镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ubuntu:20.04</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 更新软件源</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> apt-get update</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装字体支持</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> apt-get install -y fontconfig</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 清理缓存</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> apt-get clean</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加JDK17，并解压在/usr/local/jdk</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ./jdk-17.0.5 /usr/local/jdk</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 配置jdk17 环境变量</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ENV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> JAVA_HOME /usr/local/jdk</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ENV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> PATH=$JAVA_HOME/bin:$PATH</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置系统编码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ENV</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> LANG C.UTF-8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构建-jdk-镜像" tabindex="-1"><a class="header-anchor" href="#构建-jdk-镜像"><span>构建 JDK 镜像</span></a></h3><p>在当前目录（<strong>jdk</strong>）下执行如下命令</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> jdk_17.0.5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>至此，JDK 环境镜像构建完成。</p><h2 id="后端" tabindex="-1"><a class="header-anchor" href="#后端"><span>后端</span></a></h2><p>使用 Maven 将项目打成 jar 包，并上传到服务器  <strong>back</strong>  目录下。<strong>注意修改项目的数据库配置。</strong></p><h3 id="编写-dockerfile-文件-1" tabindex="-1"><a class="header-anchor" href="#编写-dockerfile-文件-1"><span>编写 Dockerfile 文件</span></a></h3><div class="language-dockerfile line-numbers-mode" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 基础镜像（上面我们构建的JDK镜像）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> jdk_17.0.5</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加springboot jar 包 指定别名为 core.jar</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ADD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> core-0.0.1-SNAPSHOT.jar core.jar</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">​</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">EXPOSE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 9998</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动容器时运行jar包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ENTRYPOINT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;java&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-jar&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-Duser.timezone=GMT+8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/core.jar&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动容器" tabindex="-1"><a class="header-anchor" href="#启动容器"><span>启动容器</span></a></h3><p>使用 Docker Compose 构建镜像和启动容器</p><ol><li>编写 docker-compose.yaml 文件</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;3.3&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可以指定多个服务</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    mall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这个名字随便起 只要有意义</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # Dockerfile 文件位置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">always</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 自动开机启动</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mall:latest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  # </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">镜像名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mall</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 容器名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      networks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">         - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mall-network</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定端口 可以是多个</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">         - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">9998:9998</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">networks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  mall-network</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>启动容器</li></ol><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 根据Dockerfile的最新内容来构建镜像并启动容器</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>验证</li></ol><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看启动的容器列表</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">容器id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看日志</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>至此后端部署完成。之后更新服务只需要把 jar 包上传到  <strong>back</strong> 目录下，执行<code>docker-compose up -d --build</code>命令即可</p><h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端"><span>前端</span></a></h2><h3 id="项目打包" tabindex="-1"><a class="header-anchor" href="#项目打包"><span>项目打包</span></a></h3><p>执行如下命令，生成 <strong>dist</strong> 文件夹，并上传到服务器  <strong>web</strong> 目录下。<strong>注意修改请求的后端地址。</strong></p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="编写-nginx-conf-配置文件" tabindex="-1"><a class="header-anchor" href="#编写-nginx-conf-配置文件"><span>编写 nginx.conf 配置文件</span></a></h3><p>前端项目部署到 Nginx 上，需要对 Nginx 进行配置</p><div class="language-conf line-numbers-mode" data-highlighter="shiki" data-ext="conf" data-title="conf" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>worker_processes auto;</span></span>
<span class="line"><span>​</span></span>
<span class="line"><span>events {</span></span>
<span class="line"><span>    worker_connections  1024;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>​</span></span>
<span class="line"><span>http {</span></span>
<span class="line"><span>    include       mime.types;</span></span>
<span class="line"><span>    default_type  application/octet-stream;</span></span>
<span class="line"><span>​</span></span>
<span class="line"><span>    sendfile        on;</span></span>
<span class="line"><span>    #tcp_nopush     on;</span></span>
<span class="line"><span>​</span></span>
<span class="line"><span>    #keepalive_timeout  0;</span></span>
<span class="line"><span>    keepalive_timeout  65;</span></span>
<span class="line"><span>​</span></span>
<span class="line"><span>    #gzip  on;</span></span>
<span class="line"><span>​</span></span>
<span class="line"><span>    client_max_body_size   20m;</span></span>
<span class="line"><span>    server {</span></span>
<span class="line"><span>        listen       9527;</span></span>
<span class="line"><span>        location / {</span></span>
<span class="line"><span>          root   /usr/share/nginx/html;</span></span>
<span class="line"><span>          index  index.html index.htm;</span></span>
<span class="line"><span>          try_files $uri $uri/ /index.html;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        location /api {</span></span>
<span class="line"><span>          proxy_pass http://192.168.107.65:9998;</span></span>
<span class="line"><span>          rewrite &quot;^/api/(.*)$&quot; /$1 break;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        #error_page  404              /404.html;</span></span>
<span class="line"><span>​</span></span>
<span class="line"><span>        # redirect server error pages to the static page /50x.html</span></span>
<span class="line"><span>        #</span></span>
<span class="line"><span>        error_page   500 502 503 504  /50x.html;</span></span>
<span class="line"><span>        location = /50x.html {</span></span>
<span class="line"><span>            root   html;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写-dockerfile-文件-2" tabindex="-1"><a class="header-anchor" href="#编写-dockerfile-文件-2"><span>编写 Dockerfile 文件</span></a></h3><div class="language-dockerfile line-numbers-mode" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置基础镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nginx</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将 dist 文件中的内容复制到 /usr/share/nginx/html/ 这个目录下面</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dist/  /usr/share/nginx/html/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> rm /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ./nginx.conf /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RUN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> echo </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;echo init ok!!&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动容器-1" tabindex="-1"><a class="header-anchor" href="#启动容器-1"><span>启动容器</span></a></h3><p>使用 Docker Compose 构建镜像和启动容器</p><ol><li>编写 docker-compose.yaml 文件</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;3.3&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">services</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可以指定多个服务</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    mall-web</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#这个名字随便起 只要有意义</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      restart</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">always</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 自动开机启动</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mall-web:latest</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 基于哪个镜像</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      container_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mall-web</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #容器名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      privileged</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      networks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">         - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">mall-web-network</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      ports</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 指定端口 可以是多个</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">         - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">9527:9527</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">networks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  mall-web-network</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>启动服务</li></ol><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>验证</li></ol><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> //</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看启动的容器列表</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mall-web</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">容器id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">//</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看日志</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，前端部署完成，可以通过浏览器进行访问来验证功能。</p><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h2><p>1、每次重启电脑或者 WSL2 后，WSL2 子系统的 IP 地址就会发生改变</p><ul><li>解决方法：<a href="https://blog.csdn.net/manbu_cy/article/details/108476859" target="_blank" rel="noopener noreferrer">WSL2 固定 IP 地址</a></li></ul><p>附：我自己的 bat 脚本（管理员身份运行）</p><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" data-title="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">setlocal</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> enabledelayedexpansion</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">::先停掉可能在跑的wsl实例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">wsl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> --shutdown ubuntu</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">::重新拉起来，并且用root的身份，启动docker服务</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">wsl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -u root service docker </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">start</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> !errorlevel!</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> equ</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> docker start success</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    :: 看看我要的IP在不在</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    wsl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -u root ip addr | </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">findstr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;192.168.107.65&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nul</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> !errorlevel!</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> equ</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> wsl ip has set</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        ::不在的话给安排上</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        wsl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -u root ip addr add 192.168.107.65/24 broadcast 192.168.107.0 dev eth0 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> eth0:1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> set wsl ip success: 192.168.107.65</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">​</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">​</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    ::windows作为wsl的宿主，在wsl的固定IP的同一网段也给安排另外一个IP</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    ipconfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">findstr</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;192.168.107.100&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nul</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> !errorlevel!</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> equ</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> windows ip has set</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        netsh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> interface ip add address </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vEthernet (WSL)&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 192.168.107.100 255.255.255.0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> set windows ip success: 192.168.107.100</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">pause</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、WSL2 固定 IP 地址后，ping 不通外网，Dockerfile 拉取镜像失败</p><ul><li>解决方法：服务器上执行下面的命令。<a href="https://blog.csdn.net/weixin_43577131/article/details/119279749" target="_blank" rel="noopener noreferrer">参考文章</a></li></ul><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/resolv.conf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;echo &quot;nameserver 8.8.8.8&quot; &gt; /etc/resolv.conf&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;echo &quot;[network]&quot; &gt; /etc/wsl.conf&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;echo &quot;generateResolvConf = false&quot; &gt;&gt; /etc/wsl.conf&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,63)]))}const d=i(e,[["render",t],["__file","web-deploy.html.vue"]]),r=JSON.parse('{"path":"/backend/practice/web-deploy.html","title":"使用 Dockerfile + Docker Compose 部署 Web 项目","lang":"zh-CN","frontmatter":{"title":"使用 Dockerfile + Docker Compose 部署 Web 项目","date":"2023-06-06T00:00:00.000Z","author":"Cleaner","categories":["工具"],"tags":["Docker"],"description":"本文主要介绍使用 Dockerfile + Docker Compose 部署完整 Web 项目（包括数据库、后端和前端）的详细步骤。 项目是前后端分离的，后端使用 SpringBoot2.7.5 + JDK17 + MySQL 8；前端使用 Vue + webpack。服务器是跑在 WSL2 上的 Ubuntu 20.04.5 服务器目录结构 数据库...","head":[["meta",{"property":"og:url","content":"https://cleaner.love/backend/practice/web-deploy.html"}],["meta",{"property":"og:site_name","content":"Cleaner"}],["meta",{"property":"og:title","content":"使用 Dockerfile + Docker Compose 部署 Web 项目"}],["meta",{"property":"og:description","content":"本文主要介绍使用 Dockerfile + Docker Compose 部署完整 Web 项目（包括数据库、后端和前端）的详细步骤。 项目是前后端分离的，后端使用 SpringBoot2.7.5 + JDK17 + MySQL 8；前端使用 Vue + webpack。服务器是跑在 WSL2 上的 Ubuntu 20.04.5 服务器目录结构 数据库..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s2.loli.net/2023/02/03/tAVzlEXg9DHF71u.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-06T04:12:14.000Z"}],["meta",{"property":"article:author","content":"Cleaner"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2023-06-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-06T04:12:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 Dockerfile + Docker Compose 部署 Web 项目\\",\\"image\\":[\\"https://s2.loli.net/2023/02/03/tAVzlEXg9DHF71u.png\\"],\\"datePublished\\":\\"2023-06-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-06T04:12:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cleaner\\"}]}"]]},"headers":[{"level":2,"title":"服务器目录结构","slug":"服务器目录结构","link":"#服务器目录结构","children":[]},{"level":2,"title":"数据库","slug":"数据库","link":"#数据库","children":[{"level":3,"title":"拉取 MySQL 镜像","slug":"拉取-mysql-镜像","link":"#拉取-mysql-镜像","children":[]},{"level":3,"title":"启动 MySQL 容器","slug":"启动-mysql-容器","link":"#启动-mysql-容器","children":[]}]},{"level":2,"title":"制作 JDK17 镜像","slug":"制作-jdk17-镜像","link":"#制作-jdk17-镜像","children":[{"level":3,"title":"下载 JDK","slug":"下载-jdk","link":"#下载-jdk","children":[]},{"level":3,"title":"编写 Dockerfile 文件","slug":"编写-dockerfile-文件","link":"#编写-dockerfile-文件","children":[]},{"level":3,"title":"构建 JDK 镜像","slug":"构建-jdk-镜像","link":"#构建-jdk-镜像","children":[]}]},{"level":2,"title":"后端","slug":"后端","link":"#后端","children":[{"level":3,"title":"编写 Dockerfile 文件","slug":"编写-dockerfile-文件-1","link":"#编写-dockerfile-文件-1","children":[]},{"level":3,"title":"启动容器","slug":"启动容器","link":"#启动容器","children":[]}]},{"level":2,"title":"前端","slug":"前端","link":"#前端","children":[{"level":3,"title":"项目打包","slug":"项目打包","link":"#项目打包","children":[]},{"level":3,"title":"编写 nginx.conf 配置文件","slug":"编写-nginx-conf-配置文件","link":"#编写-nginx-conf-配置文件","children":[]},{"level":3,"title":"编写 Dockerfile 文件","slug":"编写-dockerfile-文件-2","link":"#编写-dockerfile-文件-2","children":[]},{"level":3,"title":"启动容器","slug":"启动容器-1","link":"#启动容器-1","children":[]}]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]}],"git":{"createdTime":1754453534000,"updatedTime":1754453534000,"contributors":[{"name":"Cleaner","username":"Cleaner","email":"1414984960@qq.com","commits":1,"url":"https://github.com/Cleaner"}]},"readingTime":{"minutes":6.56,"words":1969},"filePathRelative":"backend/practice/web-deploy.md","localizedDate":"2023年6月6日","excerpt":"<blockquote>\\n<p>本文主要介绍使用 Dockerfile + Docker Compose 部署完整 Web 项目（包括数据库、后端和前端）的详细步骤。</p>\\n<p>项目是前后端分离的，后端使用 SpringBoot2.7.5 + JDK17 + MySQL 8；前端使用 Vue + webpack。服务器是跑在 WSL2 上的 Ubuntu 20.04.5</p>\\n</blockquote>","autoDesc":true}');export{d as comp,r as data};
